{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maisi\\\\OneDrive\\\\Documents\\\\react-weather-app\\\\src\\\\Forecast.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  var _s = $RefreshSig$();\n\n  const apiKey = \"91afe9171359147d9b8594d8a2e6e434\";\n  let forecastApiUrl = `http://api.openweathermap.org/data/2.5/onecall?lat=${props.data.lat}&lon=${props.data.lon}&appid=${apiKey}&units=metric`;\n\n  function showForecast(response) {\n    _s();\n\n    console.log(response.data);\n    const [loaded, setLoaded] = useState(false);\n    const [forecast, setForecast] = useState(null);\n\n    for (let index = 0; index < 6; index++) {\n      let forecast = response.data.list[index];\n      let maxTemperature = forecast.main.temp.max;\n      let minTemperature = forecast.main.temp.min;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row Forecast\",\n          id: \"forecast\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast\",\n              children: [/*#__PURE__*/_jsxDEV(WeatherIcon, {\n                icon: \"01d\",\n                size: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Tuesday \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 23\n                }, this), minTemperature, \"\\xBA/\", maxTemperature, \"\\xBA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(showForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n  axios.get(forecastApiUrl).then(showForecast);\n}\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/Users/maisi/OneDrive/Documents/react-weather-app/src/Forecast.js"],"names":["React","useEffect","useState","WeatherIcon","axios","Forecast","props","apiKey","forecastApiUrl","data","lat","lon","showForecast","response","console","log","loaded","setLoaded","forecast","setForecast","index","list","maxTemperature","main","temp","max","minTemperature","min","get","then"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAMC,MAAM,GAAG,kCAAf;AACA,MAAIC,cAAc,GAAI,sDAAqDF,KAAK,CAACG,IAAN,CAAWC,GAAI,QAAOJ,KAAK,CAACG,IAAN,CAAWE,GAAI,UAASJ,MAAO,eAAhI;;AAGA,WAASK,YAAT,CAAsBC,QAAtB,EAAgC;AAAA;;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACJ,IAArB;AAEA,UAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,UAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,SAAI,IAAIkB,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAG,CAA3B,EAA8BA,KAAK,EAAnC,EAAuC;AACrC,UAAIF,QAAQ,GAAEL,QAAQ,CAACJ,IAAT,CAAcY,IAAd,CAAmBD,KAAnB,CAAd;AACA,UAAIE,cAAc,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,IAAd,CAAmBC,GAAxC;AACA,UAAIC,cAAc,GAAGR,QAAQ,CAACK,IAAT,CAAcC,IAAd,CAAmBG,GAAxC;AAED;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACF;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,UAAjC;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE,QAAC,WAAD;AAAa,gBAAA,IAAI,EAAE,KAAnB;AAA0B,gBAAA,IAAI,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,oDACU;AAAA;AAAA;AAAA;AAAA,wBADV,EAEGD,cAFH,WAEqBJ,cAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAnCqC,KAK7BV,YAL6B;;AAqCtCR,EAAAA,KAAK,CAACwB,GAAN,CAAUpB,cAAV,EAA0BqB,IAA1B,CAA+BjB,YAA/B;AAGD;KAxCuBP,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport axios from \"axios\";\n\nexport default function Forecast(props) {\n  const apiKey = \"91afe9171359147d9b8594d8a2e6e434\";\n  let forecastApiUrl = `http://api.openweathermap.org/data/2.5/onecall?lat=${props.data.lat}&lon=${props.data.lon}&appid=${apiKey}&units=metric`;\n  \n\n  function showForecast(response) {\n    console.log(response.data);\n\n    const [loaded, setLoaded] = useState(false);\n    const [forecast, setForecast] = useState(null);\n\n    for(let index = 0; index < 6; index++) {\n      let forecast= response.data.list[index];\n      let maxTemperature = forecast.main.temp.max;\n      let minTemperature = forecast.main.temp.min;\n\n    }\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n      <div className=\"row Forecast\" id=\"forecast\">\n        <div className=\"col-2 text-center\">\n          <div className=\"forecast\">\n            <WeatherIcon icon={\"01d\"} size={40}/>\n            <p>\n              Tuesday <br />\n              {minTemperature}ยบ/{maxTemperature}ยบ\n            </p>\n          </div>\n        </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n  \n  axios.get(forecastApiUrl).then(showForecast);\n\n \n}\n"]},"metadata":{},"sourceType":"module"}