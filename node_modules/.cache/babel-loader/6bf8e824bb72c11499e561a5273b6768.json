{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maisi\\\\OneDrive\\\\Documents\\\\react-weather-app\\\\src\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"./Search.css\";\nimport axios from \"axios\";\nimport FormatTime from \"./FormatTime\";\nimport Loader from \"react-loader-spinner\";\nimport MoreInfo from \"./MoreInfo\";\nimport Forecast from \"./Forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(props) {\n  _s();\n\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      sunrise: /*#__PURE__*/_jsxDEV(FormatTime, {\n        time: new Date(response.data.sys.sunrise * 1000)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this),\n      sunset: /*#__PURE__*/_jsxDEV(FormatTime, {\n        time: new Date(response.data.sys.sunset * 1000)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this),\n      coords: response.data.coord\n    });\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n\n  function searchCity() {\n    const apiKey = \"d8f001fd84ae14313a7e46b613ac8c97\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function getLocation(position) {\n    let latitude = position.data.coords.latitude;\n    let longitude = position.data.coords.longitude;\n    let apiKey = \"d8f001fd84ae14313a7e46b613ac8c97\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function getPosition(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(getLocation);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"Search\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row search\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"search\",\n                placeholder: \"Search...\",\n                autoFocus: true,\n                className: \"col-6 ml-3 m-1 rounded search-bar\",\n                onChange: updateCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Search\",\n                className: \"col-2 btn btn-info m-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onClick: getPosition,\n                  type: \"button\",\n                  value: \"Current Location\",\n                  className: \"col-12 btn btn-info m-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          data: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MoreInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this);\n  } else {\n    searchCity();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\"Loading\", /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"#3398a4\",\n        height: 40,\n        width: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Search, \"fD9KFQzKk7+2HoON3k+ywG5+OGs=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/maisi/OneDrive/Documents/react-weather-app/src/Search.js"],"names":["React","useState","CurrentWeather","axios","FormatTime","Loader","MoreInfo","Forecast","Search","props","city","setCity","defaultCity","weatherData","setWeatherData","ready","handleResponse","response","coordinates","data","coord","temperature","main","temp","humidity","name","date","Date","dt","wind","speed","description","weather","icon","sunrise","sys","sunset","coords","updateCity","event","target","value","handleSubmit","preventDefault","searchCity","apiKey","apiUrl","get","then","getLocation","position","latitude","longitude","getPosition","navigator","geolocation","getCurrentPosition"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport \"./Search.css\";\nimport axios from \"axios\";\nimport FormatTime from \"./FormatTime\";\nimport Loader from \"react-loader-spinner\";\nimport MoreInfo from \"./MoreInfo\";\nimport Forecast from \"./Forecast\";\n\nexport default function Search(props) {\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  \n  function handleResponse(response) {\n      setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      sunrise: <FormatTime time={new Date(response.data.sys.sunrise * 1000)}/>,\n      sunset: <FormatTime time={new Date(response.data.sys.sunset * 1000)}/>,\n      coords: response.data.coord\n    });\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n    \n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    searchCity();\n  }\n\n  function searchCity() {\n    const apiKey = \"d8f001fd84ae14313a7e46b613ac8c97\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n\n  function getLocation(position) {\n    let latitude = position.data.coords.latitude;\n    let longitude = position.data.coords.longitude;\n    let apiKey = \"d8f001fd84ae14313a7e46b613ac8c97\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n\n   function getPosition(event) {\n     event.preventDefault();\n    navigator.geolocation.getCurrentPosition(getLocation);\n   }\n\n\n  if (weatherData.ready) {\n  return (\n    <div>\n    <div className=\"card\">\n      <div className=\"card-body\"> \n\n    <form className=\"Search\" onSubmit={handleSubmit}>\n      <div className=\"row search\">\n        <input\n          type=\"search\"\n          placeholder=\"Search...\"\n          autoFocus\n          className=\"col-6 ml-3 m-1 rounded search-bar\"\n          onChange={updateCity}\n        />\n        <input\n          type=\"submit\"\n          value=\"Search\"\n          className=\"col-2 btn btn-info m-1\"\n        />\n        <div>\n          <input onClick={getPosition}\n            type=\"button\"\n            value=\"Current Location\"\n            className=\"col-12 btn btn-info m-1\"\n          />\n        </div>\n      </div>\n    </form>\n    </div>\n    <CurrentWeather data={weatherData}/>\n    </div>\n    <MoreInfo data={weatherData}/>\n    <Forecast data={weatherData}/> \n  </div>\n  );\n  } else {\n    searchCity();\n    return (\n      <div className=\"loading\">\n        Loading\n       <Loader\n        type=\"ThreeDots\"\n        color=\"#3398a4\"\n        height={40}\n        width={40}\n        />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}