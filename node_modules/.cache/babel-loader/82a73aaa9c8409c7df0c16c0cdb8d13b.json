{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maisi\\\\OneDrive\\\\Documents\\\\react-weather-app\\\\src\\\\CurrentWeather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./CurrentWeather.css\";\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport MoreInfo from \"./MoreInfo\";\nimport FormatDate from \"./FormatDate\";\nimport FormatTime from \"./FormatTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentWeather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      sunrise: /*#__PURE__*/_jsxDEV(FormatTime, {\n        time: new Date(response.data.sys.sunrise * 1000)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this),\n      sunset: /*#__PURE__*/_jsxDEV(FormatTime, {\n        time: new Date(response.data.sys.sunset * 1000)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this)\n    });\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"city\",\n          id: \"city-name\",\n          children: weatherData.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"current-weather text-capitalize\",\n          id: \"weather-description\",\n          children: weatherData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"temperature\",\n          id: \"current-temperature\",\n          children: Math.round(weatherData.temperature)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unit-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            href: \"\",\n            id: \"celcius-selector\",\n            className: \"active\",\n            children: \"\\xBAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \" \", \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n            href: \"\",\n            id: \"fahrenheit-selector\",\n            children: \"\\xBAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"date-time\",\n          id: \"day-time\",\n          children: /*#__PURE__*/_jsxDEV(FormatDate, {\n            date: weatherData.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://pixy.org/src/22/thumbs350/225537.jpg\",\n            id: \"weather-icon\",\n            width: \"150px\",\n            alt: \"cloud icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card more-info-card\",\n        children: /*#__PURE__*/_jsxDEV(MoreInfo, {\n          sunrise: weatherData.sunrise,\n          sunset: weatherData.sunset,\n          humidity: weatherData.humidity,\n          wind: weatherData.wind\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else {\n    const apiKey = \"91afe9171359147d9b8594d8a2e6e434\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\"Loading\", /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"#3398a4\",\n        height: 40,\n        width: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(CurrentWeather, \"tUtfTt5AWoQL1bRls7ZkwlkTJP4=\");\n\n_c = CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["C:/Users/maisi/OneDrive/Documents/react-weather-app/src/CurrentWeather.js"],"names":["React","useState","axios","Loader","MoreInfo","FormatDate","FormatTime","CurrentWeather","props","weatherData","setWeatherData","ready","handleResponse","response","coordinates","data","coord","temperature","main","temp","humidity","city","name","date","Date","dt","wind","speed","description","weather","icon","sunrise","sys","sunset","Math","round","apiKey","apiUrl","defaultCity","get","then"],"mappings":"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","sourcesContent":["import React, { useState }from \"react\";\nimport \"./CurrentWeather.css\";\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport MoreInfo from \"./MoreInfo\";\nimport FormatDate from \"./FormatDate\";\nimport FormatTime from \"./FormatTime\";\n\nexport default function CurrentWeather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  \n  function handleResponse(response) {\n  \n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      city: response.data.name,\n      date: new Date(response.data.dt * 1000),\n      wind: response.data.wind.speed,\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      sunrise: <FormatTime time={new Date(response.data.sys.sunrise * 1000)}/>,\n      sunset: <FormatTime time={new Date(response.data.sys.sunset * 1000)}/>\n    });\n  \n  }\n  \n  if (weatherData.ready) {\n    return (\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <h2 className=\"city\" id=\"city-name\">\n            {weatherData.city}\n          </h2>\n          <h4 className=\"current-weather text-capitalize\" id=\"weather-description\">\n            {weatherData.description}\n          </h4>\n          <h1 className=\"temperature\" id=\"current-temperature\">\n            {Math.round(weatherData.temperature)}\n          </h1>\n          <div className=\"unit-selector\">\n            <button href=\"\" id=\"celcius-selector\" className=\"active\">\n              ºC\n            </button>{\" \"}\n            |\n            <button href=\"\" id=\"fahrenheit-selector\">\n              ºF\n            </button>\n          </div>\n          <h4 className=\"date-time\" id=\"day-time\">\n            <FormatDate date={weatherData.date} />\n          </h4>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"weather-icon\">\n            <img\n              src=\"https://pixy.org/src/22/thumbs350/225537.jpg\"\n              id=\"weather-icon\"\n              width=\"150px\"\n              alt=\"cloud icon\"\n            />\n          </div>\n        </div>\n        <div className=\"card more-info-card\">\n            <MoreInfo sunrise={weatherData.sunrise} sunset={weatherData.sunset} humidity={weatherData.humidity} wind={weatherData.wind}/>\n          </div>\n      </div>\n      \n    );  \n  } else {\n    const apiKey = \"91afe9171359147d9b8594d8a2e6e434\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n\n    return (\n      <div className=\"loading\">\n        Loading\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#3398a4\"\n        height={40}\n        width={40}\n        />\n        </div>\n    )\n  }\n  \n\n}"]},"metadata":{},"sourceType":"module"}