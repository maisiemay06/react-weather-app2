{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maisi\\\\OneDrive\\\\Documents\\\\react-weather-app\\\\src\\\\HourlyForecast.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport FormatHourlyForecast from \"./FormatHourlyForecast\";\nimport { ChevronDoubleDown } from \"react-bootstrap-icons\";\nimport { ChevronDoubleUp } from \"react-bootstrap-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HourlyForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [hourlyForecast, setHourlyForecast] = useState(null);\n  let [hourlyForecastVisible, setHourlyForecastVisible] = useState(false);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.data.coords]);\n\n  function handleResponse(response) {\n    setHourlyForecast(response.data.hourly);\n    setLoaded(true);\n  }\n\n  function showHourlyForecast(event) {\n    event.preventDefault();\n    setHourlyForecastVisible(true);\n  }\n\n  function hideHourlyForecast(event) {\n    event.preventDefault();\n    setHourlyForecastVisible(false);\n  }\n\n  if (hourlyForecastVisible) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: hideHourlyForecast,\n          className: \"col-12 less-button\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(ChevronDoubleUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 78\n          }, this), \" \", \" Close Hourly Forecast\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row Forecast\",\n          children: hourlyForecast.map(function (hourlyForecast, index) {\n            if (index > 0 && index < 6) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(FormatHourlyForecast, {\n                  data: hourlyForecast\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 15\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 14\n              }, this);\n            } else {\n              return null;\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showHourlyForecast,\n          className: \"col-12\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(ChevronDoubleDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 66\n          }, this), \" \", \" Show Hourly Forecast\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = `d8f001fd84ae14313a7e46b613ac8c97`;\n    let lon = props.data.coords.lon;\n    let lat = props.data.coords.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(HourlyForecast, \"927aRFepeGACohbC9pIl6qjCMEc=\");\n\n_c = HourlyForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"sources":["C:/Users/maisi/OneDrive/Documents/react-weather-app/src/HourlyForecast.js"],"names":["axios","useEffect","useState","FormatHourlyForecast","ChevronDoubleDown","ChevronDoubleUp","HourlyForecast","props","loaded","setLoaded","hourlyForecast","setHourlyForecast","hourlyForecastVisible","setHourlyForecastVisible","data","coords","handleResponse","response","hourly","showHourlyForecast","event","preventDefault","hideHourlyForecast","map","index","apiKey","lon","lat","apiUrl","get","then"],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./Forecast.css\";\r\nimport FormatHourlyForecast from \"./FormatHourlyForecast\";\r\nimport { ChevronDoubleDown } from \"react-bootstrap-icons\";\r\nimport { ChevronDoubleUp } from \"react-bootstrap-icons\";\r\n\r\nexport default function HourlyForecast(props) {\r\nlet [loaded, setLoaded] = useState(false);\r\nlet [hourlyForecast, setHourlyForecast] = useState(null);\r\nlet [hourlyForecastVisible, setHourlyForecastVisible] = useState(false);\r\n\r\nuseEffect(() => {\r\nsetLoaded(false);\r\n}, [props.data.coords]);\r\n\r\n  function handleResponse(response) {\r\n    setHourlyForecast(response.data.hourly);\r\n    setLoaded(true);\r\n  }\r\n\r\n\r\n  function showHourlyForecast (event) {\r\n    event.preventDefault();\r\n    setHourlyForecastVisible(true);\r\n      }\r\n\r\n\r\n      function hideHourlyForecast (event) {\r\n        event.preventDefault();\r\n        setHourlyForecastVisible(false);\r\n          }\r\n   \r\nif (hourlyForecastVisible) {\r\n  return (\r\n    <div className=\"card\">\r\n        <div className=\"card-body\">\r\n        <button onClick={hideHourlyForecast} className=\"col-12 less-button\"> <ChevronDoubleUp /> {\" Close Hourly Forecast\"} \r\n      </button>\r\n    <div className=\"row Forecast\">\r\n          {hourlyForecast.map(function (hourlyForecast, index){\r\n            if (index > 0 && index < 6) {\r\n            return (\r\n             <div className=\"col text-center\" key={index}>\r\n              <FormatHourlyForecast data={hourlyForecast}/>\r\n              </div>\r\n            );\r\n            } else {\r\n              return null;\r\n            }\r\n            })}  \r\n        </div>\r\n        </div>\r\n        </div>\r\n        \r\n  )\r\n\r\n}\r\n\r\n  if (loaded) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n        <button onClick={showHourlyForecast} className=\"col-12\"> <ChevronDoubleDown /> {\" Show Hourly Forecast\"} </button>\r\n        </div>\r\n      </div>\r\n    );\r\n \r\n  }  else { \r\n    let apiKey = `d8f001fd84ae14313a7e46b613ac8c97`;\r\n    let lon = props.data.coords.lon;\r\n    let lat = props.data.coords.lat;\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\r\n    \r\n    axios.get(apiUrl).then(handleResponse);\r\n  \r\n    return null;\r\n  }\r\n}\r\n "]},"metadata":{},"sourceType":"module"}