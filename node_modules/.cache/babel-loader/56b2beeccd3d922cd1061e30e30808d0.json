{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maisi\\\\OneDrive\\\\Documents\\\\react-weather-app\\\\src\\\\Forecast.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport FormatForecast from \"./FormatForecast\";\nimport { ChevronDoubleDown } from \"react-bootstrap-icons\";\nimport { ChevronDoubleUp } from \"react-bootstrap-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  let [forecastVisible, setForecastVisible] = useState(false);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.data.coords]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function showForecast() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row Forecast\",\n      children: forecast.map(function (dailyForecast, index) {\n        if (index > 0 && index < 6) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(FormatForecast, {\n              data: dailyForecast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 16\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showForecast,\n          className: \"col-12\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(ChevronDoubleDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 60\n          }, this), \" \", \" More Info\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = `d8f001fd84ae14313a7e46b613ac8c97`;\n    let lon = props.data.coords.lon;\n    let lat = props.data.coords.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"jD/YXltopW1jXqlWldydCmHEVRY=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/Users/maisi/OneDrive/Documents/react-weather-app/src/Forecast.js"],"names":["axios","useEffect","useState","FormatForecast","ChevronDoubleDown","ChevronDoubleUp","Forecast","props","loaded","setLoaded","forecast","setForecast","forecastVisible","setForecastVisible","data","coords","handleResponse","response","daily","showForecast","map","dailyForecast","index","apiKey","lon","lat","apiUrl","get","then"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,eAAT,QAAgC,uBAAhC;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACxC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAI,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChBQ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACC,GAFQ,EAEN,CAACF,KAAK,CAACO,IAAN,CAAWC,MAAZ,CAFM,CAAT;;AAIE,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCN,IAAAA,WAAW,CAACM,QAAQ,CAACH,IAAT,CAAcI,KAAf,CAAX;AACAT,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAGD,WAASU,YAAT,GAAyB;AACvB,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACOT,QAAQ,CAACU,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAA+B;AAC3C,YAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAC5B,8BACC;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACC,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA;AADD,aAAsCC,KAAtC;AAAA;AAAA;AAAA;AAAA,kBADD;AAKC,SAND,MAMO;AACL,iBAAO,IAAP;AACD;AACA,OAVF;AADP;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAED,MAAId,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA;AAAQ,UAAA,OAAO,EAAEW,YAAjB;AAA+B,UAAA,SAAS,EAAC,QAAzC;AAAA,uCAAmD,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,kBAAnD,OAA0E,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD,MASQ;AACN,QAAII,MAAM,GAAI,kCAAd;AACA,QAAIC,GAAG,GAAGjB,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkBS,GAA5B;AACA,QAAIC,GAAG,GAAGlB,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkBU,GAA5B;AACA,QAAIC,MAAM,GAAI,uDAAsDD,GAAI,QAAOD,GAAI,uBAAsBD,MAAO,EAAhH;AAEAvB,IAAAA,KAAK,CAAC2B,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBZ,cAAvB;AAEA,WAAO,IAAP;AACD;AACF;;GApDuBV,Q;;KAAAA,Q","sourcesContent":["\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport FormatForecast from \"./FormatForecast\";\nimport { ChevronDoubleDown } from \"react-bootstrap-icons\";\nimport { ChevronDoubleUp } from \"react-bootstrap-icons\";\n\nexport default function Forecast(props) {\nlet [loaded, setLoaded] = useState(false);\nlet [forecast, setForecast] = useState(null);\nlet [forecastVisible, setForecastVisible] = useState(false);\n\nuseEffect(() => {\nsetLoaded(false);\n}, [props.data.coords]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n\n  function showForecast () {\n    return (\n      <div className=\"row Forecast\">\n            {forecast.map(function (dailyForecast, index){\n              if (index > 0 && index < 6) {\n              return (\n               <div className=\"col text-center\" key={index}>\n                <FormatForecast data={dailyForecast}/>\n                </div>\n              );\n              } else {\n                return null;\n              }\n              })}  \n          </div>\n    )\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n        <button onClick={showForecast} className=\"col-12\"> <ChevronDoubleDown /> {\" More Info\"} </button>\n        </div>\n      </div>\n    );\n \n  }  else { \n    let apiKey = `d8f001fd84ae14313a7e46b613ac8c97`;\n    let lon = props.data.coords.lon;\n    let lat = props.data.coords.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n    \n    axios.get(apiUrl).then(handleResponse);\n  \n    return null;\n  }\n}\n "]},"metadata":{},"sourceType":"module"}