{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maisi\\\\OneDrive\\\\Documents\\\\react-weather-app\\\\src\\\\Forecast.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport FormatForecast from \"./FormatForecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.data.coords]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row Forecast\",\n          children: forecast.map(function (dailyForecast, index) {\n            if (index > 0 && index < 6) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col text-center\",\n                children: /*#__PURE__*/_jsxDEV(FormatForecast, {\n                  data: dailyForecast\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 17\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 16\n              }, this);\n            } else {\n              return null;\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = `d8f001fd84ae14313a7e46b613ac8c97`;\n    let lon = props.data.coords.lon;\n    let lat = props.data.coords.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["C:/Users/maisi/OneDrive/Documents/react-weather-app/src/Forecast.js"],"names":["axios","useEffect","useState","FormatForecast","Forecast","props","loaded","setLoaded","forecast","setForecast","data","coords","handleResponse","response","daily","map","dailyForecast","index","apiKey","lon","lat","apiUrl","get","then"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACxC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChBM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACC,GAFQ,EAEN,CAACF,KAAK,CAACK,IAAN,CAAWC,MAAZ,CAFM,CAAT;;AAIE,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCJ,IAAAA,WAAW,CAACI,QAAQ,CAACH,IAAT,CAAcI,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACGE,QAAQ,CAACO,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAA+B;AAC3C,gBAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAC5B,kCACC;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,uCACC,QAAC,cAAD;AAAgB,kBAAA,IAAI,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA;AADD,iBAAsCC,KAAtC;AAAA;AAAA;AAAA;AAAA,sBADD;AAKC,aAND,MAMO;AACL,qBAAO,IAAP;AACD;AACA,WAVF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GArBD,MAwBK;AACH,QAAIC,MAAM,GAAI,kCAAd;AACA,QAAIC,GAAG,GAAGd,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkBQ,GAA5B;AACA,QAAIC,GAAG,GAAGf,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkBS,GAA5B;AACA,QAAIC,MAAM,GAAI,uDAAsDD,GAAI,QAAOD,GAAI,uBAAsBD,MAAO,EAAhH;AAEAlB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBX,cAAvB;AAEA,WAAO,IAAP;AACD;AACF;;GA/CuBR,Q;;KAAAA,Q","sourcesContent":["\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./Forecast.css\";\nimport FormatForecast from \"./FormatForecast\";\n\nexport default function Forecast(props) {\nlet [loaded, setLoaded] = useState(false);\nlet [forecast, setForecast] = useState(null);\n\nuseEffect(() => {\nsetLoaded(false);\n}, [props.data.coords]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row Forecast\">\n            {forecast.map(function (dailyForecast, index){\n              if (index > 0 && index < 6) {\n              return (\n               <div className=\"col text-center\" key={index}>\n                <FormatForecast data={dailyForecast}/>\n                </div>\n              );\n              } else {\n                return null;\n              }\n              })}  \n          </div>\n        </div>\n      </div>\n    );\n \n  }\n  \n  \n  else { \n    let apiKey = `d8f001fd84ae14313a7e46b613ac8c97`;\n    let lon = props.data.coords.lon;\n    let lat = props.data.coords.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&appid=${apiKey}`;\n    \n    axios.get(apiUrl).then(handleResponse);\n  \n    return null;\n  }\n}\n  "]},"metadata":{},"sourceType":"module"}